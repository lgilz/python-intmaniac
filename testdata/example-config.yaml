---
version: 1.0
output_format: teamcity
# everything in the global key will be merged into every test, with the test data
# getting preference.
global:
  config:
    test_container: hub.cognotekt.int:5000/production/testsuite:latest
    docker_compose_template: docker-compose.yml.tmpl
    docker_compose_params: # optional. a list of parameters to docker-compose
    test_service: # REQUIRED. the service in the docker-compose which is executed with tests
    test_commands: # optional. executed one-by-one, all must succeed.
                   # if not given the service will be "run" and expected to return
                   # true (0) or false (1), which will be used as test result
    run_timeout: 60
    # test_script:  # FUTURE. will be passed to '$test_shell -c "HERE"'.
# either dict or array allowed.
# internally, a dict is wrapped into an array (one more layer).
# all tests sets in a dict are executed in parallel,
# the outer array in serial
testsets:
  - default:
      latest:
        # available as TEST_COMPANION_x in the environment of the
        # docker-compose run, AND the following strings will be replaced
        # in the docker-compose template: %%COMPANION_x%%
        environment:
          companion0: hub.cognotekt.int:5000/production/rsas:latest
        # overwrite global config settings if needed. if not, global
        # settings are used.
        meta:
          docker_compose_template: /some/other/template.yaml
          allow_failure: true
  - default:
      demo:
        environment:
          companion0: hub.cognotekt.int:5000/production/rsas:demo
